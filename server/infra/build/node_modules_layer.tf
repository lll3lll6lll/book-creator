module "triggers_server_nm" {
  source = "../../../infra/modules/builders/trigger"
  app_absolute_path = "${var.root_dir}/server"
  file_extensions  = [ "json"]
  files       = ["package.json","package-lock.json", "tsconfig.json"]
}

data aws_s3_object "nm_layer"{
  bucket = var.s3_bucket_name
  key    = local.nm_name_zip
}

locals {
  trigger_replace_nm_data =  {
    triggers = module.triggers_server_nm.triggers
#    force    = timestamp()
  }

  trigger_replace_nm_layer = filebase64sha256("${local.absolut_nm_name_zip}")
}

resource "terraform_data" "pack_node_modules" {
  triggers_replace = local.trigger_replace_nm_data

  provisioner "local-exec" {
    command = <<-EOT

      mkdir -p "${local.target_dir}" || true

      rm -f "${local.absolut_nm_name}" || true
      rm -f "${local.absolut_nm_name_zip}" || true

      mkdir -p "${local.absolut_nm_name}/nodejs" || true

      cp "${local.project_dir}/package.json" "${local.target_dir}/${local.nm_name}/nodejs/package.json"
      cp "${local.project_dir}/package-lock.json" "${local.target_dir}/${local.nm_name}/nodejs/package-lock.json"


      cd  ${local.target_dir}/${local.nm_name}/nodejs
      npm ci --prefer-offline --omit=dev --omit=optional
      cd ..
      zip -qr9 "${local.absolut_nm_name_zip}" .
      aws s3 cp "${local.absolut_nm_name_zip}" "s3://${data.aws_s3_bucket.server_data.bucket}"

    EOT
  }

}

module "mermesa_node_modules" {
  source = "../../../infra/modules/lambda/layer_with_s3"
  name   = "mermesa_node_modules"
  runtime = "nodejs20.x"
  s3_bucket = var.s3_bucket_name
  s3_key = local.nm_name_zip
  source_code_hash = local.trigger_replace_nm_layer
  depends_on = [terraform_data.pack_node_modules]

}
